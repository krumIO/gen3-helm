# Default values for arborist.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- (map) Global configuration options.
global:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  # -- (map) Postgres database configuration.
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: true
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"
  # -- (string) Environment name. This should be the same as vpcname if you're doing an AWS deployment. Currently this is being used to share ALB's if you have multiple namespaces. Might be used other places too.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (string) S3 bucket name for Kubernetes manifest files.
  kubeBucket: kube-gen3
  # -- (string) S3 bucket name for log files.
  logsBucket: logs-gen3
  # -- (bool) Whether to sync data from dbGaP.
  syncFromDbgap: false
  # -- (string) Path to the user.yaml file in S3.
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers.
  tierAccessLevel: libre
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false

# -- (map) Postgres database configuration. If db does not exist in postgres cluster and dbCreate is set ot true then these databases will be created for you
postgres:
  # -- (bool) Whether the database should be created. Default to global.postgres.dbCreate
  dbCreate:
  # -- (string) Hostname for postgres server. This is a service override, defaults to global.postgres.host
  host:
  # -- (string) Database name for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  database:
  # -- (string) Username for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  username:
  # -- (string) Port for Postgres.
  port: "5432"
  # -- (string) Password for Postgres. Will be autogenerated if left empty.
  password:

# -- (int) Number of replicas for the deployment.
replicaCount: 1

# -- (map) Docker image information.
image:
  # -- (string) Docker repository.
  repository: quay.io/cdis/arborist
  # -- (string) Docker pull policy.
  pullPolicy: IfNotPresent
  # -- (string) Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- (list) Docker image pull secrets.
imagePullSecrets: []

# -- (string) Override the name of the chart.
nameOverride: ""

# -- (string) Override the full name of the deployment.
fullnameOverride: ""

# -- (map) Service account to use or create.
serviceAccount:
  # -- (bool) Specifies whether a service account should be created.
  create: true
  # -- (map) Annotations to add to the service account.
  annotations: {}
  # -- (string) The name of the service account to use.
  name: ""
# Declare variables to be passed into your templates.

# -- (map) Annotations to add to the pod
podAnnotations: {}

# -- (map) Security context to apply to the pod
podSecurityContext:
  # fsGroup: 2000

# -- (map) Security context to apply to the container
securityContext: {}

  # -- (map) Linux capabilities to drop
  # capabilities:
  #   drop:
  #   - ALL

  # -- (bool) Whether to use a read-only root filesystem
  # readOnlyRootFilesystem: true

  # -- (bool) Whether to run the container as a non-root user
  # runAsNonRoot: true

  # -- (int) The user ID to run the container as
  # runAsUser: 1000

# -- (map) Kubernetes service settings
service:
  # -- (string) The type of the Kubernetes service
  type: ClusterIP

  # -- (int) The port number that the service exposes
  port: 80

# -- (map) Resource requests and limits
resources:
  # -- (map) Resource requests
  requests:
    # -- (string) CPU request
    cpu: 0.1
    # -- (string) Memory request
    memory: 12Mi

  # -- (map) Resource limits
  limits:
    # -- (string) CPU limit
    cpu: 1.0
    # -- (string) Memory limit
    memory: 512Mi

# -- (map) Autoscaling settings
autoscaling:
  # -- (bool) Whether autoscaling is enabled
  enabled: false

  # -- (int) The minimum number of replicas to scale down to
  minReplicas: 1

  # -- (int) The maximum number of replicas to scale up to
  maxReplicas: 100

  # -- (int) The target CPU utilization percentage for autoscaling
  targetCPUUtilizationPercentage: 80

  # -- (int) The target memory utilization percentage for autoscaling
  # targetMemoryUtilizationPercentage: 80

# -- (map) Node selector to apply to the pod
nodeSelector: {}

# -- (list) Tolerations to apply to the pod
tolerations: []

# -- (map) Affinity rules to apply to the pod
affinity: {}

# -- (list) Volumes to attach to the pod
volumes: []

# -- (list) Volume mounts to attach to the container
volumeMounts: []

# -- (list) Environment variables to pass to the container
env:
  # -- (string) The URL of the JSON Web Key Set (JWKS) endpoint for authentication
  - name: JWKS_ENDPOINT
    value: "http://fence-service/.well-known/jwks"
