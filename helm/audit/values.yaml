# Default values for audit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# -- (map) Global configuration options.
global:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  # -- (map) Postgres database configuration.
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: true
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"
  # -- (string) Environment name. This should be the same as vpcname if you're doing an AWS deployment. Currently this is being used to share ALB's if you have multiple namespaces. Might be used other places too.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (string) S3 bucket name for Kubernetes manifest files.
  kubeBucket: kube-gen3
  # -- (string) S3 bucket name for log files.
  logsBucket: logs-gen3
  # -- (bool) Whether to sync data from dbGaP.
  syncFromDbgap: false
  # -- (string) Path to the user.yaml file in S3.
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers.
  tierAccessLevel: libre
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false

# -- (map) Postgres database configuration. If db does not exist in postgres cluster and dbCreate is set ot true then these databases will be created for you
postgres:
  # -- (bool) Whether the database should be created. Default to global.postgres.dbCreate
  dbCreate:
  # -- (string) Hostname for postgres server. This is a service override, defaults to global.postgres.host
  host:
  # -- (string) Database name for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  database:
  # -- (string) Username for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  username:
  # -- (string) Port for Postgres.
  port: "5432"
  # -- (string) Password for Postgres. Will be autogenerated if left empty.
  password:

# -- (int) Number of desired replicas
replicaCount: 1

image:
  # -- (string) The Docker image repository for the audit service
  repository: quay.io/cdis/audit-service
  # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  # -- (string) The tag to use for the image.
  tag: "master"

imagePullSecrets: []

# -- (string) Override the name of the chart. This can be used to provide a unique name for a chart
nameOverride: ""

# -- (string) Override the full name of the chart, which is used as the name of resources created by the chart
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  # -- (bool) Whether to create a service account
  create: true
  # Annotations to add to the service account
  annotations:
    # -- (string) The Amazon Resource Name (ARN) of the role to associate with the service account
    eks.amazonaws.com/role-arn:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # -- (string) The name of the service account
  name: "audit-service-sa"

# -- (map) Annotations to add to the pod
podAnnotations: {}

# -- (map) Security context for the pod
podSecurityContext: {}

# -- (map) Security context for the containers in the pod
securityContext: {}

  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- (map) Configuration for the service
service:
  # -- (string) Type of service. Valid values are "ClusterIP", "NodePort", "LoadBalancer", "ExternalName".
  type: ClusterIP
  # -- (int) Port on which the service is exposed
  port: 80

# -- (map) Resource requests and limits for the containers in the pod
resources:
  # -- (map) The amount of resources that the container requests
  requests:
    # -- (string) The amount of CPU requested
    cpu: 0.1
    # -- (string) The amount of memory requested
    memory: 12Mi
  # -- (map) The maximum amount of resources that the container is allowed to use
  limits:
    # -- (string) The maximum amount of CPU the container can use
    cpu: 1.0
    # -- (string) The maximum amount of memory the container can use
    memory: 512Mi

# -- (map) Configuration for autoscaling the number of replicas
autoscaling:
  # -- (bool) Whether autoscaling is enabled or not
  enabled: false
  # -- (int) Minimum number of replicas
  minReplicas: 1
  # -- (int) Maximum number of replicas
  maxReplicas: 4
  # -- (int) Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


# -- (map) Node Selector for the pods
nodeSelector: {}

# -- (list) Tolerations for the pods
tolerations: []


labels:
  app: audit
  release: production
  # for network policy selectors
  authprovider: "yes"
  # uses explicit proxy and AWS APIs
  netnolimit: "yes"
  public: "yes"
  userhelper: "yes"
  tags.datadoghq.com/service: "audit"

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - audit
        topologyKey: "kubernetes.io/hostname"

env:
  - name: DEBUG
    value: "false"
  - name: ARBORIST_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: arboristUrl
        optional: true

volumes: []

volumeMounts: []

initVolumeMounts: []

initEnv: {}

server:
  pull_from_queue: false
  debug: false
  sqs:
    region: "us-east-1"
    url: "http://sqs.com"
  AWS_CREDENTIALS: {}
    # cred1:
    #   aws_access_key_id:
    #   aws_secret_access_key:

api:
  # if left empty, queries are not time-boxed
  QUERY_TIMEBOX_MAX_DAYS:

  QUERY_PAGE_SIZE: 1000

  # whether to return usernames in query responses,
  # and to allow querying by username
  QUERY_USERNAMES: true
