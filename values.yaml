global:
  aws:
    enabled: false
  hostname: heal.krum.app
  dev: true
  postgres: 
    dev: true
    dbCreate: true
    # master:
    #   username: "db1user"
    #   password: "p6iVzUrBipnYrLZMdnah"
    #   host: "10.86.80.5"
    #   port: 5432
    master:
      host:
      username: postgres
      password:
      port: "5432"
postgresql:
  primary:
    persistence:
      enabled: false

aws-es-proxy:
  enabled: false
  esEndpoint: http://elasticsearch:9200

metadata:
  esEndpoint: http://elasticsearch:9200

guppy:
  enabled: true
  esEndpoint: http://elasticsearch:9200
  # Configmap
  indices:
  - index: gen3-dev-subject
    type: subject
  - index: gen3-dev-file
    type: file
  configIndex: gen3-dev-config

portal:
  dataUploadBucket: krum-gen3-private-bucket
  image:
    repository: quay.io/cdis/data-portal
    tag: master

revproxy:
  ingress:
    annotations:
      acme.cert-manager.io/http01-edit-in-place: 'true'
      cert-manager.io/cluster-issuer: letsencrypt-production
      cert-manager.io/issue-temporary-certificate: 'true'
    tls:
    - hosts:
        - heal.krum.app
      secretName: heal-krum-app-tls

# peregrine:
#   env:
#     CONF_HOSTNAME: heal.krum.app

indexd:
  db-secret: indexd-dbcreds
  enabled: true
  env:
  - name: GEN3_DEBUG
    value: "True"

fence:
  serviceAccount:
    # Specifies whether a service account should be created
    # -- (bool) Whether to create a service account
    create: true
    # Annotations to add to the service account
    annotations: {}
      # -- (string) The Amazon Resource Name (ARN) of the role to associate with the service account
      # eks.amazonaws.com/role-arn:
  enabled: true
  db-secret: fence-dbcreds
  FENCE_CONFIG:
    OPENID_CONNECT:
      google:
        client_id: ""
        client_secret: ""
    GLOBAL_PARSE_VISAS_ON_LOGIN: true
    ENABLE_DB_MIGRATION: true
    DATA_UPLOAD_BUCKET: krum-gen3-private-bucket
    AWS_CREDENTIALS:
      cred1: 
        aws_access_key_id: ''
        aws_secret_access_key: ''
    S3_BUCKETS:
      krum-gen3-private-bucket:
        cred: 'cred1'
        region: 'us-central1'
        # optionally you can manually specify an s3-compliant endpoint for this bucket
        endpoint_url: 'https://storage.googleapis.com/'

requestor:
  enabled: false
  image:
    repository: quay.io/cdis/requestor
    tag: master
  
# common:
#   db-secret: "{{ $.Chart.Name }}-dbcreds"

# arborist:
#   db-secret: arborist-dbcreds

# audit:
#   db-secret: audit-dbcreds

tags:
  dev: true

ambassador:
  enabled: true
  labels:
    app: ambassador
  podLabels:
    app: ambassador
  selectorLabels:
    app: ambassador